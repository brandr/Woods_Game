Woods game todolist

-finish sorting out memory leaks (note that some of them don't actually seem to be real leaks but need to make sure)
-make a small forest level with trails and brush to test basic exploration.
	*from here, can implement items like shears to make temporary trails (this will require changing the level's tiles from the player class,  
		which may be difficult)
	*may also want to implement a HUD and decide how item management will be handled
	*this may be a good time to implement a stamina system
-fix the issue where the player can go faster while running against a wall than while walking normally.
-fix glitch where player can get stuck inside a block by holding in a direction when traveling between levels
-idea: consider including animation frame duration in the files from which we load gameimages 
-implement different types of "brush" tiles and figure out how to make them look and feel like they flow smoothly from one to another.
	*might need to remake the tile speed modifier system
	*idea: just organize tile types into rows based on their type and speed modifier, and in each row have differnt styles of the same tile type, along with some made for corners/edges of other tile types
-make the leaves as a separate sprite and having them turn partly transparent when the player passes behind them.
	*could also try doing this for the entire trees, since we might have very large trees that obscure the player
	*first, make sure the leaves have their mask loaded by images. (do this in level when they are created)
	*since entitygroups are treated as single entities, need some kind of entitygroup overridden entity collision method for when the player rect-collides witth trees.
		#within this method, have each entity within the group attempt to collide with the other entity (i.e. the player) and check for the transparent_on_contact attribute
-idea: put level coords and dimensions in the corresponding files
	*could also put them in different files and load the dungeon based on this data
-test large levels to see if there is lag when entering them
-figure out how to handle player leaving the level when there's no corresponding level
-if we add faraway backgrounds, implement parallax 
