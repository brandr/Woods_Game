Woods game todolist

---------------------------------------------------
Prioritization
---------------------------------------------------

Last updated 6/9/2019

totals don't include ongoing stuff 

total: 43-101 days (~ 2-4 months)
biggest task: NPCs/quest triggers

1. NPCs/cutscenes/quest triggers (plan carefully and think long term, write notes)
	(15-30 days)
2. Inventory/item stuff (shovel?)
	(5-10 days)
3. Figure out how to force end of day (otherwise saving gets weird after midnight)
	(1-3 days)
4. Wake-up time (alarm clock?)
	(1-3 days)
5. Animation/image code stuff
	(5-10 days)
6. Menu/control stuff
	(1-5 days)
7. Animals/bugs
	(5-15 days)
8. Encyclopedia
	(5-15 days)
9. Audio
	(5-10 days)
10. Content!
	(???)

Ongoing tasks:

1. improve memory usage
2. fix bugs
3. streamline level editor

---------------------------------------------------
Level editor
---------------------------------------------------

What to use tileset tab for?
	* ideally could add new object types, edit global values, etc

Tiled Images
	* no room to put it on tileset tab-- need to reorganize it
		# first, firue out what I actually want to use that tab for (currently only used to select tileset)

---------------------------------------------------
Memory management/error handling
---------------------------------------------------

Use the heap profiler whenever debugging memory usage because it's extremely helpful

ImageLoader.load_image() is responsible for a huge portion of memory usage, so see if we can make it less expensive
	* might be possible using bitmap settings since the memory being allocated is in al_create_bitmap()
	* keep an eye out for redundant bitmap creation

Consider getting rid of some serializable tile attributes, like position (we can get this by their index in the tilerow)
	* remember to re-save levels in the editor after making this change or any others like it
	* this same strategy could apply to a lot of serializable objects
	* in addition to serializable values, we can probably get rid of others as well

One possible problem might be in Tile.replace_block(). At some point, we create new interactActions, contactActions, etc., so make sure the old ones are getting properly deleted.
	* can probably store these actions more globally (or do we already do this?)

Make it so we load asynchronously when using the calendar (do it during the fade)
	* This is a good place to fix the way the player "teleports" to the spawn location

Could make it so we asynchronously load only adjacent levels to the current one (need to be careful to ensure the player can't walk to the edge before we finish loading)
	* in the cave game this applied only to dungeons, so could implement travel between dungeons and make it work like that
		# would probably want to figure out how I'm actually going to use dungeons

Decide how to handle player leaving the level when there's no corresponding level
	* probably want to not let them leave if we know this will happen, and push them back into a legal position

Fix build warnings

---------------------------------------------------
Procedural generation
---------------------------------------------------

IDEA: When procedurally generating woods, allow a few days to pass so plant growth happens "naturally"

IDEA: can make level gen even more random by randomizing some destination path nodes within a network of levels

---------------------------------------------------
Bug fixes
---------------------------------------------------

Level gen bug: sometimes a trail doesn't get properly connected
	* I think I fixed this (looked like a problem with the adjacency check in Level.connect_path_nodes)
		# if it doesn't happen for a really long time, mark the bug as fixed
	* keep an eye on console output for anything odd
		# when the bug happens, it seems to say "generating paths" for that node but nothing else
	* it specifically seems to happen where we generate exactly one tile, then stop
	* could this be because "visited" tracking goes backwards and connects the trail to itself?

There's sometimes an exception on closing the window
	* does this still happen? can't repro
	* seems to have something to do with randomized procedural generation, because it only happens some of the time
	* exception has something to do with level's tile rows

---------------------------------------------------
Art/content
---------------------------------------------------

Draw the leaves for the large tree sprite
	* if it's hard to see the player when walking behind trees, make the "transparent on contact" attribute actually work

Draw the symbols for the Eye of Pan and the Eye of Gabriel
	* could also do "hand" instead of "eye" but I like eye better currently

---------------------------------------------------
Physics
---------------------------------------------------

Consider changing thorn behavior
	* Instead of just bouncing away, you get stuck and have to "shake" free (which uses a lot of stamina) or cut the thorns

Consider giving blocks optional masks
	* this means we use the block's image if there's no mask filepath

---------------------------------------------------
Animation/image code
---------------------------------------------------

IDEA: different walk animations for different speed ranges (1.0 - 2.0, 2.0 - 3.0, etc)
	* do this at the same time as making "rustle" animation because that animation might need to sync up with player's feet

Make some more "brush" tile types that are much slower than grass so there's more of a point to staying on the trail
	* give them "rustling" sprites/animation that correspond to the player walking through them so it covers the player's feet and doesn't just look flat
		# this could be used for wading through shallow water
	* later, consider allowing trails to be carved through these (should be slow/tedious/stamina intensive so the player can't just make trails all day on day 1)

IDEA: could give trees shadows -- these would be similar to night/day filters and would have spritesheets like entitygroup masks

Buildings
	* need door animation? (no other blocks are animated, might need to be a new thing)
	* stairs? (good test of building mechanics, similar to going outside)
		# could also make stairs an entitygroup and use an optical illusion to make it look like you're walking "up" it
	* can use tiledImages and invisible blocks to make furniture, sink, etc
	* make roofs

Figure out how to scale object/ui sizes with resolution
	* might not be feasible

Make custom mouse cursor

Idea: consider including animation frame duration in the files from which we load gameimages 
	* may also want to adjust frame duration ingame in some situations such as when tilting the joystick very lightly with a controller

---------------------------------------------------
NPCs
---------------------------------------------------

How to manage NPCs moving between levels? (currently they are stored in "beings", might want to refactor to game image manager or some smaller manager class)

Need animations/assets
	- Walking
	- Have NPC turn to face player when talking and/or turn to face player under some circumstances
	- Dialog portrait image

IDEA: Make NPC dialog similar to stardew valley where NPCs will randomly choose something to say based on the conditions
	- implement this as a set of "npc dialogs" tied to a set of "npc dialog conditions" attached to boolean methods through reflection
	- for instance, have a character choose from a set of 3 options when it's raining, 2 other options when the player is holding a certain tool, etc
	- allow these conditions to be "anded" together and give them ordinals so calculation is either
		* might be able to do something with | and flags corresponding to the orders
	- weight some options to be more likely than others using integer values
	- when the player talks to an npc, determine all dialog options that are appropriate and randomly choose one

Make NPCs walk around outside programatically and have varying habits throughout the day.
	- there should definitely be a per-frame update for NPCs, but could also have "update clocks" that go off every so often
	- for instance, they should usually stay close to trails
	- need to figure out how to process NPC movements when they're not on the same Level as the player
		* maybe get less fine-grain and just process what level they're in at any given time based on time of day,
			what they're doing, the weather, etc
		* How to move NPCs between levels?

Add NPC schedules/quest triggers
	* could make the first quest getting some item from the store with money from the player's mom
		# can also just choose to keep the money
	* these quest triggers need to tie into time travel (think of majora's mask)

Experiment with some basic cutscenes
	* could have one with Renaldo preaching about the neighorhood watch as a test

---------------------------------------------------
Animals
---------------------------------------------------

Add animals
	* keep track of which animals live in the area and let them move between levels, like NPCs
	* new animals appear over time, probably don't need to have animals breed because the new ones will just show up from the player's perspective
	* maybe some animal types are set to only appear n days into the game
	* add bugs too (possibly first, they might be easier and make more sense to interact with)
		# some bugs might be under rocks

---------------------------------------------------
Inventory/items
---------------------------------------------------

Implement ways to add items to the inventory, possibly store them in a chest or something

Implement "pickup-able" items, like seeds from ferns
	* Should probably be a % drop chance rolled on breaking plant so player can't savescum
	* probably need to make general "plant" behavior (growing, spreading, etc.) as part of this
	* Make sure these disappear properly from level-- do not store them in xml collections as there is no need

Allow harvesting plants
	* consider implementing a "cooking" system

Make mallet able to break rocks, add swinging animation and animations for rocks being hit/destroyed
	* first make sure I actually want the mallet in the game (balance)

Add a shovel and allow the player to dig up items
	* implement picking up items off the ground first

---------------------------------------------------
Day/night cycle
---------------------------------------------------

Day/night cycle
	- might want to use different filtering techniques depending on indoors/outdoors, in shaded/non shaded areas, etc.
		* how to handle areas with their own lighting like lamps?
	- What happens in terms of date/saving if the player stays up past midnight? (with the current system, that means the date is never late)
		* Should player pass out, get a game over, etc if they're up too late?
	- calculate "time to wake up" somehow rather than just making it constant
		* alarm clock upgrade/item?

---------------------------------------------------
Stamina
---------------------------------------------------
	
IDEA: Stamina should drain slowly when walking and faster when running since time and stamina are both limited resources
	* running should be significantly less stamina-efficient -- it shouldn't only drain faster, you should lose more stamina per unit traveled than when walking

IDEA: Stamina upgrades could be the only thing you take with you when reloading

Contact with thorns should cost stamina (look for a "damage" attribute that I already made)

---------------------------------------------------
Menus
---------------------------------------------------

Make loading screen(s)
	* will require setting up asynchronous calls
	* could possibly have one with a progress bar and description of what we're doing when genning the world

Need to make a "restore defaults" (or something similar) button for video configurations

Allow changing text speed in options

---------------------------------------------------
Controls
---------------------------------------------------

Make it so the game can detect when a controller is plugged in and update properly
	*look at main, where the event queue registers the source 
		(might need some check accessed through the main loop)
	*might need to do this for mouse too, need to test

---------------------------------------------------
Encyclopedia
---------------------------------------------------

Make an "encyclopedia"-like feature that allows the player to keep track of animals seen, bugs caught, rare items found, plants found, etc.
	* might even use real information about some of these things (like latin name)

---------------------------------------------------
Audio
---------------------------------------------------

Add music
	* The Eye of Pan has a special theme that is hidden inside other tracks

Dialog sounds like in animal crossing